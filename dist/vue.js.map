{"version":3,"file":"vue.js","sources":["../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["class Observer {\n  // 观测值\n  constructor(value) {\n    this.walk(value);\n  }\n\n  // 循环递归（性能差的原因）对象，对对象的所有属性进行劫持\n  walk(data) {\n    // 让对象上的所有属性依次进行观测\n    let keys = Object.keys(data);\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      let value = data[key];\n      // \"重新定义\"属性\n      defineReactive(data, key, value);\n    }\n  }\n}\n\n// 闭包\nexport function defineReactive(data, key, value) {\n  // 深度属性劫持\n  // 如果value还是object类型，继续调用observe进行递归劫持\n  observe(value);\n\n  // 缺点：Object.defineProperty只能劫持已经存在的属性，对于新增的和删除的操作监听不到\n  // 所以vue中单独写了一些api如$set, $delete来实现属性的新增的和删除后，仍然能做到数据劫持\n  Object.defineProperty(data, key, {\n    get() {\n      // 取值的时候会执行get\n      // 闭包，value不会销毁，能取得到\n      return value;\n    },\n    set(newValue) {\n      // 设值的时候会执行set\n      if (newValue == value) return;\n\n      // 深度属性劫持\n      // 如果设置的属性的value仍然是对象，继续递归进行新增属性的响应式\n      observe(newValue);\n\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  // 对这个对象进行劫持\n\n  if (typeof data !== \"object\" || data === null) {\n    return; // 只对对象进行劫持\n  }\n\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（需要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持过）\n  return new Observer(data);\n}\n","import { observe } from \"./observe/index\";\n\nexport function initState(vm) {\n  const opts = vm.$options; // 获取所有的选项\n\n  if (opts.data) {\n    initData(vm);\n  }\n}\n\n// 数据代理\nfunction proxy(vm, target, key) {\n  // vm.name\n  Object.defineProperty(vm, key, {\n    get() {\n      // => vm._data.name\n      return vm[target][key];\n    },\n    set(newValue) {\n      vm[target][key] = newValue;\n    },\n  });\n}\n\n// 初始化data\nfunction initData(vm) {\n  let data = vm.$options.data; // data可能是函数和对象\n  // 根组件可以是function也可以对象，组件必须是函数\n  data = typeof data === \"function\" ? data.call(vm) : data; // data是用户返回的对象\n  // 将data挂载到vm的_data，和vm上直接可以取到属性的proxy不一样\n  vm._data = data;\n  // 数据劫持 vue2用的是Object.defineProperty\n  observe(data);\n\n  // vm.xxx =>(代理到)  vm._data.xxx\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n}\n","import { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  // 通过原型prototype给Vue增加init方法\n  Vue.prototype._init = function (options) {\n    // 用于初始化操作\n    // vue vm.$options就是获取用户的配置\n\n    // 我们使用vue的时候，$nextTick, $data, $attr...以$开头的都表示Vue的内置属性\n    const vm = this;\n    vm.$options = options; // 将用户的选项挂载到实例上\n\n    // 初始化状态\n    initState(vm);\n  };\n}\n","import { initMixin } from \"./init\";\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) {\n  // options就是用户的选项\n  this._init(options);\n}\n\ninitMixin(Vue); // 扩展了_init方法\n\nexport default Vue;\n"],"names":["Observer","value","_classCallCheck","walk","_createClass","key","data","keys","Object","i","length","defineReactive","observe","defineProperty","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","target","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":"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"}