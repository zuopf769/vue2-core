{"version":3,"file":"vue.js","sources":["../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function initState(vm) {\n    const opts = vm.$options;// 获取所有的选项\n\n    if (opts.data) {\n        initData(vm);\n    }\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data; // data可能是函数和对象\n\n    // 根组件可以是function也可以对象，组件必须是函数\n    data = typeof data === 'function' ? data.call(vm): data;\n\n    console.log(data)\n}","import { initState } from \"./state\";\n\nexport function initMixin(Vue) { // 通过原型prototype给Vue增加init方法\n    Vue.prototype._init = function(options) { // 用于初始化操作\n        // vue vm.$options就是获取用户的配置\n\n        // 我们使用vue的时候，$nextTick, $data, $attr...以$开头的都表示Vue的内置属性\n        const vm = this;\n        vm.$options = options; // 将用户的选项挂载到实例上\n\n        // 初始化状态\n        initState(vm);\n    }\n}\n","import { initMixin } from \"./init\";\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) {// options就是用户的选项\n    this._init(options);\n}\n\ninitMixin(Vue); // 扩展了_init方法\n\nexport default Vue;"],"names":["initState","vm","opts","$options","data","initData","call","console","log","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;IAAO,SAASA,SAASA,CAACC,EAAE,EAAE;IAC1B,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAQ,CAAC;;MAEzB,IAAID,IAAI,CAACE,IAAI,EAAE;QACXC,QAAQ,CAACJ,EAAE,CAAC,CAAA;IAChB,GAAA;IACJ,CAAA;IAEA,SAASI,QAAQA,CAACJ,EAAE,EAAE;MAClB,IAAIG,IAAI,GAAGH,EAAE,CAACE,QAAQ,CAACC,IAAI,CAAC;;IAE5B;IACAA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACE,IAAI,CAACL,EAAE,CAAC,GAAEG,IAAI,CAAA;IAEvDG,EAAAA,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAA;IACrB;;ICbO,SAASK,SAASA,CAACC,GAAG,EAAE;IAAE;IAC7BA,EAAAA,GAAG,CAACC,SAAS,CAACC,KAAK,GAAG,UAASC,OAAO,EAAE;IAAE;IACtC;;IAEA;QACA,IAAMZ,EAAE,GAAG,IAAI,CAAA;IACfA,IAAAA,EAAE,CAACE,QAAQ,GAAGU,OAAO,CAAC;;IAEtB;QACAb,SAAS,CAACC,EAAE,CAAC,CAAA;OAChB,CAAA;IACL;;ICXA;IACA,SAASS,GAAGA,CAACG,OAAO,EAAE;IAAC;IACnB,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAA;IACvB,CAAA;IAEAJ,SAAS,CAACC,GAAG,CAAC,CAAC;;;;;;;;"}