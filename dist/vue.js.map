{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 我们希望重新数组的部分方法\n// 思路： 改变原型链、AOP函数劫持：内部调用原本的方法前后新加逻辑\n\n// 获取数组的原型\nlet oldArrayProtoMethods = Array.prototype;\n\n// 基于Array.prototype创建一个新的对象\n// 让数组类型的value的__proto__指向下面的对象，等于修改了原型链\n// arrayMethods.__proto__ = oldArrayProtoMethods;\n// value.__proto__ == arrayMethods\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n// 所有的变异方法7个：能修改原数组的方法： 对头（尾）\n// concat、slice不能修改原数组\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\n\nmethods.forEach((method) => {\n  // arrayMethods上面的加的方法只会影响arrayMethods上面的方法，不会覆盖Array.prototype上的原本的方法\n  // 通过原型链找到了arrayMethods的push就不会继续去找Array.prototype上的push方法\n  // 重新arrayMethods上的7个方法\n  // arr.push(1,2,3)\n  arrayMethods[method] = function (...args) {\n    // 这里重写了数组的方法\n    // 旧方法: 在新的方法里面调用\n    // this就是arr\n    const result = oldArrayProtoMethods[method].apply(this, args); // 内部调用原来的方法，函数的劫持，面向切片变成\n\n    // console.log(\"array method: \", method);\n\n    // 底下为AOP的增加自己的逻辑\n\n    // this是arr，谁调用的push就是谁\n    // this就是Observer中的那个value\n    const ob = this.__ob__;\n    // 新增的数组\n    let inserted;\n    // push和unshift会新增数据，新增的数据也需要劫持\n    // splice也可能会新增数据\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        inserted = args; // arr.unshift(1, 2, 3) // 新增的内容是一个数组\n        break;\n      case \"splice\":\n        inserted = args.slice(2); // arr.splice(0, 1, {a: 1}, {b: 2}) 第2个参数后面的参数是新增的内容是数组\n      default:\n        break;\n    }\n    // 对数组类型的数据进行观察劫持\n    if (inserted) ob.observeArray(inserted); // 对新增的数据（数组）再次进行观测劫持\n    return result;\n  };\n});\n","let id = 0;\n\n// 被观察者，属性就是被观察者；属性的值发生变化后会通知所有的观察者更新\n\n// 属性的dep要收集watcher\nclass Dep {\n  constructor() {\n    // 唯一id\n    this.id = id++;\n    // 这里存放着当前属性对应的watcher有哪些\n    this.subs = [];\n  }\n\n  // 保证dep和watcher都不重复，保证dep和watcher双向维护\n  depend() {\n    // 这里不希望放置不重复的watcher；而且不只是一个单向的关系，dep -> watcher\n    // 也得让wather记录dep\n    // this.subs.push(Dep.target);\n\n    // 我们希望dep和watcher相互维护各自的引用，相互记忆\n    // 把dep传给了watcher\n    Dep.target.addDep(this); // 让watcher记住dep，在watcher中记住dep的时候去了重同时也让dep记录了watcher\n\n    // dep和watcher是多对多的关系\n    // 一个属性在多个组件中使用 一个dep对应多个watcher\n    // 一个组件中有多个属性 一个watcher包含多个dep\n  }\n\n  addSubs(watcher) {\n    this.subs.push(watcher);\n  }\n\n  notify() {\n    // 告诉所有watcher更新\n    this.subs.forEach((watcher) => watcher.update());\n  }\n}\n\n// target为什么不挂载到原型上，反而是个静态变量呢？因为没必要通过实例来访问，只是一个作为一个全局变量\n// 静态属性 - 相当于全局变量\n// 记录\nDep.target = null;\n\nexport default Dep;\n","import { arrayMethods } from \"./array\";\nimport Dep from \"./dep\";\nclass Observer {\n  // 观测值\n  constructor(value) {\n    // 给所有响应式数据增加标识，并且可以在响应式上获取Observer实例上的方法\n    // 如果数据上已经有了__ob__标识，证明已经被代理过了\n    // 增加__ob__属性为this，目的是可以在value上取到this从而调用Observer类上的方法\n    // 等同于value.__ob__ = this；但是没有控制可以枚举性，会导致下面defineReactive的时候死循环\n    // 值是this，但是不可枚举，循环的时候无法获取，从而解决了死循环的问题\n    Object.defineProperty(value, \"__ob__\", {\n      enumerable: false,\n      configurable: false,\n      value: this,\n    });\n\n    if (Array.isArray(value)) {\n      // 重新数组的7个变异方法，为啥是变异方法，因为会修改原数组\n\n      // 需要保留数组原有的方法，并且可以重写部分方法\n      value.__proto__ = arrayMethods; // 重写数组原型方法\n      // 数组里面的对象引用类型也需要进行劫持\n      this.observeArray(value); // 如果数组中方的是对象，可以监控到对象的改变\n    } else {\n      // 遍历\n      this.walk(value);\n    }\n  }\n\n  // 循环递归（性能差的原因）对象，对对象的所有属性进行劫持\n  walk(data) {\n    // 让对象上的所有属性依次进行观测\n    let keys = Object.keys(data);\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      let value = data[key];\n      // \"重新定义\"属性\n      defineReactive(data, key, value);\n    }\n  }\n\n  // 观测数组\n  observeArray(data) {\n    data.forEach((item) => observe(item));\n  }\n}\n\n// 要暴露的方法，所以不能放到Observer类里面\n// 闭包\nexport function defineReactive(data, key, value) {\n  // 深度属性劫持\n  // 如果value还是object类型，继续调用observe进行递归劫持\n  observe(value);\n\n  // 每一个属性都有一个dep\n  let dep = new Dep();\n\n  // 缺点：Object.defineProperty只能劫持已经存在的属性，对于新增的和删除的操作监听不到\n  // 所以vue中单独写了一些api如$set, $delete来实现属性的新增的和删除后，仍然能做到数据劫持\n  Object.defineProperty(data, key, {\n    get() {\n      // console.log(`get key ${key}`);\n      // 什么时候Dep.target会有值？模版中使用了的变量，在调用_render()方法的时候就会在Dep.target加上值\n      // 用到了的属性才会被收集，在data中定义了，但是视图组件中没有用到也不会被收集\n      if (Dep.target) {\n        // 让这个属性的收集器记住当前的watcher\n        dep.depend();\n      }\n\n      // 取值的时候会执行get\n      // 闭包，value不会销毁，能取得到\n      return value;\n    },\n    set(newValue) {\n      // 设值的时候会执行set\n      if (newValue == value) return;\n\n      console.log(`set key ${key} ${newValue}`);\n\n      // 再次劫持\n      // 深度属性劫持\n      // 如果设置的属性的value仍然是对象，继续递归进行新增属性的响应式\n      observe(newValue);\n\n      value = newValue;\n\n      // 属性一变化，就通知更新\n      dep.notify();\n    },\n  });\n}\n\nexport function observe(data) {\n  // 对这个对象进行劫持\n\n  if (typeof data !== \"object\" || data === null) {\n    return; // 只对对象进行劫持\n  }\n\n  // data上有__ob__标识证明已经被观察过了，直接返回原本的Observer就可以了\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__;\n  }\n\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（需要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持过）\n  return new Observer(data);\n}\n","import { observe } from \"./observe\";\n\nexport function initState(vm) {\n  const opts = vm.$options; // 获取所有的选项\n\n  if (opts.data) {\n    initData(vm);\n  }\n}\n\n// 数据代理\nfunction proxy(vm, target, key) {\n  // vm.name\n  Object.defineProperty(vm, key, {\n    get() {\n      // => vm._data.name\n      return vm[target][key];\n    },\n    set(newValue) {\n      vm[target][key] = newValue;\n    },\n  });\n}\n\n// 初始化data\nfunction initData(vm) {\n  let data = vm.$options.data; // data可能是函数和对象\n  // 根组件可以是function也可以对象，组件必须是函数\n  data = typeof data === \"function\" ? data.call(vm) : data; // data是用户返回的对象\n  // 将data挂载到vm的_data，和vm上直接可以取到属性的proxy不一样\n  vm._data = data;\n  // 数据劫持 vue2用的是Object.defineProperty\n  observe(data);\n\n  // vm.xxx =>(代理到)  vm._data.xxx\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n}\n","// 标签名：第一个字符+后面的字符；第一个字符不能以数字开头\n// 字符串的两个\\\\是什么？表示转义，字符串中的转义，前一个\\表示转义后面的\\\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\n// (?:${ncname}\\\\:)?\n// 第一个?:表示匹配但是不记住匹配项；\n// 为啥不要记住匹配性，因为需要加()分组后表示前面一半是命名空间可有可无，但是又不想铺获$1的值\n// https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_expressions#special-non-capturing-parentheses\n// (?:${ncname}\\\\:)? 第二个？表示可有可无\n// 外面的分组\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n\n// 注意前面的开头^，必须是开始匹配\n// <1_xxx 不能以数字开头\n// <_xxx 自定义标签，都是以_开头 webcomponent\n// <xxx\n// <namespace:yyy 命名空间\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\n// console.log(startTagOpen);\n\n// 注意前面的开头^，必须是开始匹配\n// 匹配到的是</xxx>\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\n// console.log(endTag);\n\n// 注意前面的开头^，必须是开始匹配\n// a=b 没有空格\n// a = b =前后有空格\n// <xx a = b a前面也有空格\n// ([^\\s\"'<>\\/=]+)表示前面的属性名或者属性值，除了\"'<>那些字符都可以的字符\n// <xxx disabled disabled属性只有前面的部分没有后面的部分（=xxx）\n// (?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))? 第一个()为了后面加？表示属性值可有可无\n// \"([^\"]*)\"+ 以双引号包的非\"的多个字符 <xx a = \"b\" 左边双引号右边双引号中间不是双引号就可以\n// '([^']*)'+ 以单引号包的非'的多个字符 <xx a = 'b' 左边单引号右边单引号中间不是单引号就可以\n// ([^\\s\"'=<>`]+) 除了\\s\"'=<>`的任意多个字符  <xx a = b 属性也可以不加单引号或者双引号\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\n// 第一个分组就是属性的key value就是分组3/分组4/分组5\n// console.log(attribute);\n\n// 注意前面的开头^，必须是开始匹配\n// <div> <br/> 标签结束可能是> 也可能是/>\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaaa}} 匹配到的时候表达式的变量\n\n// 对模版进行编译\n// vue3不是采用的正则匹配了，是一个一个字符匹配\n// 思路： 每解析一个标签就删除一个标签，每解析一个属性就删除一个属性；字符串被截取完了就结束了\nexport function parseHTML(html) {\n  // 抽象语法树\n  /*\n  {\n    tag:'div',\n    type:1,\n    children:[{tag:'span',type:1,attrs:[],parent:'div对象'}],\n    attrs:[{name:'zf',age:10}],\n    parent:null\n  }\n*/\n\n  // 用于存放元素的栈，利用栈来创建一棵树\n  let stack = [];\n  // 节点类型-标签类型\n  const ELEMENT_TYPE = 1;\n  // 节点类型-文本类型\n  const TEXT_TYPE = 3;\n  // 根节点\n  let root;\n  // 指向栈中最后一个元素\n  let currentParent;\n\n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName,\n      type: ELEMENT_TYPE,\n      children: [],\n      attrs,\n      parent: null,\n    };\n  }\n\n  // 开始标签 <div><span><a>text</a></span></div>\n  function start(tagName, attrs) {\n    // console.log(tagName, attrs);\n    // 创建一个ast节点\n    let element = createASTElement(tagName, attrs);\n    // 看下是否是空树\n    if (!root) {\n      // 如果为空树，当前节点是树的根节点\n      root = element;\n    }\n    // 进栈构建父子关系\n    // 放在end时候执行该逻辑也行\n    // if (currentParent) {\n    //   element.parent = currentParent;\n    //   currentParent.children.push(element);\n    // }\n    stack.push(element);\n    // currentParent为栈中的最后一个元素\n    currentParent = element;\n  }\n\n  // 结束标签\n  function end(tagName) {\n    // console.log(tagName);\n    // 当前标签结束就弹栈；弹出栈中的最后一个元素\n    let element = stack.pop();\n    // currentParent为栈中的最后一个元素\n    currentParent = stack[stack.length - 1];\n    // 出栈构建父子关系\n    // 放在start入栈的时候执行该逻辑也行\n    if (currentParent) {\n      // 当前标签结束的这个元素的parent就是栈中的最后一个元素\n      element.parent = currentParent;\n      // 栈中的最后一个元素的儿子就是当前弹栈弹出来的节点\n      currentParent.children.push(element);\n    }\n  }\n\n  // 文本；文本不需要放到栈中，文本直接放到currentParent节点的children中\n  function chars(text) {\n    // console.log(text);\n    // 去掉空，可以优化为如果空格超过2个就删除2个以上的空格\n    text = text.replace(/\\s/g, \"\");\n    // 不是节点直接的换行等空文本\n    if (text) {\n      // 文本节点直接放到当前栈的最后一个节点的children中，作为他的儿子\n      currentParent.children.push({\n        type: TEXT_TYPE,\n        text,\n        parent: currentParent,\n      });\n    }\n  }\n\n  // html字符串前进n个字符：例如截掉已经捕获到的开头标签名、属性名和属性值、结束标签\n  function advance(n) {\n    html = html.substring(n);\n  }\n\n  // 解析开始标签，包括解析标签名和所有属性\n  function parseStartTag() {\n    // 匹配开始标签名\n    const start = html.match(startTagOpen);\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n      };\n\n      // html字符串截掉tagName\n      // start[0] =>\n      advance(start[0].length);\n\n      // 捕获当前标签的所有属性\n      let attr, end;\n      // 当前捕获到了属性标签并且不是当前标签的结束\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5],\n        });\n        // attr[0] => id=\"app\"\n        advance(attr[0].length);\n      }\n\n      // html字符当前到了当前标签的结束位置 > 或者 />\n      if (end) {\n        // 移除结束位置\n        advance(end[0].length);\n        // 返回匹配到的当前节点\n        return match;\n      }\n    }\n  }\n\n  // html字符串肯定是以<开头\n  while (html) {\n    let textEnd = html.indexOf(\"<\");\n    // <div>hello</div> indexOf等于0\n    // 如果textEnd为0，表明当前html字符串处于开始标签处或者结束标签处\n    // 如果textEnd大于0，表明当前html字符串处于文本节点或者空文本处，>处于文本节点的结束位置\n    if (textEnd === 0) {\n      // 如果indexOf的索引是0，则说明是一个开始标签或者结束标签\n      // 解析开始标签：<div a=b c=d>\n      const startTagMatch = parseStartTag();\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        // 继续解析当前标签下的子开头标签\n        // 例如<div a=b c=d><span>txt</span></div>中的下一个标签是<span>\n        continue;\n      }\n\n      // 解析到最深的子节点的结束标签\n      // 例如<div a=b c=d><span>txt</span></div>中的</span>\n      const endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]);\n        continue;\n      }\n      // 先让他暂停\n      // break;\n    }\n\n    // 当前html字符串处于文本标签处，因为结束标签>的index>0\n    // 标签中的空格也是文本\n    // <div a=b c=d>\n    //    <span>txt</span>\n    // </div>\n    // hello</div> indexOf大于0 说明是文本\n    let text;\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      advance(text.length);\n      chars(text);\n    }\n  }\n\n  // html为空\n  // console.log(\"html\", html);\n  // root\n  // console.log(\"root\", root);\n\n  return root;\n}\n","import { parseHTML } from \"./parse\";\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaaa}} 匹配到的时候表达式的变量\n\n/**\n *\n *  <div style=\"color:red\">hello {{name}} <span></span></div>\n *  render(){\n *    return _c('div',{style:{color:'red'}},_v('hello'+_s(name) + 'age' + _s(age)),_c('span',undefined,''))\n *  }\n */\n\n// 如果是文本就创建文本节点；如果是标签元素就调用codegen\nfunction gen(node) {\n  // 标签类型\n  if (node.type == 1) {\n    return codegen(node);\n  } else {\n    // 文本类型节点\n    let text = node.text;\n    // 纯文本类型\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`;\n    }\n    // 包含{{}}的类型\n    // 变量name需要转成字符串_s(name) 用+拼接\n    // {{name}} hello {{name}} => _v(_s(name) + 'hello' + _s(name))\n    console.log(\"文本节点：\", text);\n\n    let tokens = [];\n    let match;\n    // exec方法的特殊点：\n    // 现象：当正则表达式里面有g的时候，连续执行两次结果不一样: let reg = /a/g; reg.exec('abc'); reg.exec('abc');\n    // 原因：执行完一次后 reg.lastIndex变成1了，从第一个字符再往后找就找不到了\n    // 解决方法：每次重新执行exec的时候需要把reg.lastIndex重置为0\n    defaultTagRE.lastIndex = 0;\n    // 记录上一个匹配内容后的位置，算上字符串本身的长度\n    let lastIndex = 0;\n    while ((match = defaultTagRE.exec(text))) {\n      // console.log(\"match\", match);\n      // 匹配的位置\n      let index = match.index;\n\n      // 中间有一个文本字符串\n      // {{name}} hello {{age}} age\n      // lastIndex就是{{name}}的结尾位置，index就是{{name}}的开头位置\n      if (index > lastIndex) {\n        // 把中间的hello内容放到tokens中\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n      }\n\n      tokens.push(`_s(${match[1].trim()})`);\n      lastIndex = index + match[0].length;\n    }\n\n    // 最后的文本字符串\n    // {{name}} hello {{age}} age中的age\n    // 从{{age}}的结束位置截取到最后\n    if (text.length > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\n    }\n\n    // console.log(tokens);\n\n    return `_v(${tokens.join(\"+\")})`;\n  }\n}\n\n// 生成儿子节点\nfunction getChildren(el) {\n  const children = el.children;\n  if (children) {\n    return `${children.map((c) => gen(c)).join(\",\")}`;\n  } else {\n    return false;\n  }\n}\n\n// 生成属性\n// attrs [{name: 'id', value: 'wapper'}, {name: 'style', value: 'color: red; font-size: 50px'}]\nfunction genProps(attrs) {\n  let str = \"\";\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i];\n    // 如果attr名称是style\n    // {name: 'style', value: 'color: red; font-size: 50px'}\n    // 'color: red; font-size: 50px' => {color: red, font-size: 50px}\n    if (attr.name === \"style\") {\n      let obj = {};\n      attr.value.split(\";\").forEach((item) => {\n        let [key, value] = item.split(\":\");\n        obj[key] = value;\n      });\n      attr.value = obj;\n    }\n    // JSON.stringify把vue转成字符串\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`;\n}\n\n// 生成code\nfunction codegen(el) {\n  // console.log(\"el\", el);\n\n  // 生成改节点的孩子，如果有孩子就加个,没孩子就不加了\n  let children = getChildren(el);\n\n  let code = `_c('${el.tag}', ${\n    el.attrs.length > 0 ? genProps(el.attrs) : \"undefined\"\n  }${children ? `,${children}` : \"\"}\n  )`;\n\n  return code;\n}\n\nexport function compileToFunctions(template) {\n  // console.log(template);\n\n  // 1. 将template转换成AST语法树\n  let ast = parseHTML(template);\n  // console.log(ast);\n\n  // 2. 生成render方法，render方法执行后返回的结果就是虚拟DOM\n  let code = codegen(ast);\n  // console.log(\"code\", code);\n\n  // 模版引擎的原理： with + new Function\n  // _c('div',{style:{color:'red'}},_v('hello'+_s(name)),_c('span',undefined,''))\n  // 用with？为了取值方便；解决_c _v _s从哪儿取的问题，不用都得vm._c vm._v vm._s了\n  // 为啥是this而不是vm? render函数被谁调用就是谁； this是谁就从谁的上面取_c _v _s\n  let render = `with(this){return ${code}}`;\n  let renderFn = new Function(render);\n  // 生成render函数，需要调用；分成两块：生成函数、调用函数\n  return renderFn;\n}\n\n// 最终的render函数\n/*\nfunction render() {\n  with (this) {\n    _c(\n      \"div\",\n      { style: { color: \"red\" } },\n      _v(\"hello\" + _s(name)),\n      _c(\"span\", undefined, \"\")\n    );\n  }\n}\n*/\n\n// render函数调用绑定作用域\n// render.call(vm);\n","import Dep from \"./dep\";\n\n// 观察者模式\n// Watcher观察者，观察某个属性，某个属性的值发生变化后 观察者就update\n// 每个属性有一个dep, 属性就是被观察者；属性的值发生变化后会通知所有的观察者更新\n\n// watcher的id\nlet id = 0;\n\n// 1) 当我们创建渲染watcher的时候我们把当前的渲染watcher放到 Dep.target上\n// 2) this.getter()会调用_render()方法，就会走到属性的get方法上\n\n// 不同组件有不同的watcher，目前只有一个，渲染根实例的\nclass Watcher {\n  constructor(vm, fn, options) {\n    // 唯一标识符\n    this.id = id++;\n    // 组件实例\n    this.vm = vm;\n    // 渲染watcher\n    this.renderWatcher = options;\n    // callback\n    this.getter = fn; // getter意味着调用这个函数可以发生取值操作\n    // 记录dep\n    // watcher为什么要记录deps?\n    // 1. 后续实现计算属性会用到\n    // 2. 一些清理工作需要用到: 当组件卸载的时候会把该组件的所有依赖deps清除掉\n    this.deps = [];\n    this.depsId = new Set();\n\n    this.get();\n  }\n\n  get() {\n    // 先把当前的watcher放到 Dep.target上\n    // A组件渲染的时候会把A组件的watcher放上来，B组件渲染的时候会把B组件的watcher放上来，\n    Dep.target = this;\n    // 调用vm._update(vm._render()) 就会去vm上取name和age的值\n    this.getter();\n    // 渲染完毕后就清空\n    Dep.target = null;\n  }\n\n  // 一个组件 对应着多个属性 重复的属性不应该重复记录 name可能会被引用几次\n  addDep(dep) {\n    let depId = dep.id;\n    if (!this.depsId.has(depId)) {\n      this.deps.push(dep);\n      this.depsId.add(depId);\n      // watcher记住了dep而且去重了，此时dep也记住了watcher\n      dep.addSubs(this);\n    }\n  }\n\n  update() {\n    // console.log(\"update\");\n\n    // 执行多次，修改为下面的方面\n    // 重新渲染\n    // this.get();\n\n    // 解决修改属性执行多次，把watcher放到队列中，然后一次执行\n    queueWatcher(this);\n  }\n\n  // 真实的渲染\n  run() {\n    console.log(\"run\");\n    this.get(); // vm.name = 最后一次的值\n  }\n}\n\n// 用于存放watcher的队列\nlet queue = [];\n// 类似set防止重复存放watcher，因为一个组件依赖多个属性\nlet has = {};\n// 防抖，只执行最后一次\nlet pending = false;\n\n// 异步批处理\nfunction flushSchedulerQueue() {\n  // 拷贝一份，不要影响原来的watcher的queue\n  let flushQueue = queue.slice(0);\n\n  // clear清理工作\n  // 清理工作为什么放到前面？pending为false的话如果刷新中还有新的任务过来的话，就可以放到队列中\n  queue = [];\n  has = {};\n  pending = false;\n  // 在刷新的过程中如果还有新的watcher，会重新放到queue中\n  flushQueue.forEach((q) => q.run());\n}\n\nfunction queueWatcher(watcher) {\n  const id = watcher.id;\n  if (!has[id]) {\n    has[id] = true;\n    queue.push(watcher);\n    console.log(\"watcher queue\", queue);\n    // 不管我们的update执行多少次，但是最终只执行一轮刷新操作\n    // 第一个属性过来就设置定时器，第二、三个属性过来的时候就不设置定时器了\n    if (!pending) {\n      // 开启一个定时器，异步执行刷新操作\n      setTimeout(flushSchedulerQueue, 0);\n      // pending为true以后就不能再次添加setTimeout了\n      pending = true;\n    }\n  }\n}\n\n// 封装异步方案，供用户使用和框架内部使用\n// 外部用户使用的时候可以连续写多个vm.$nextTick(() => {})，所以也需要维护队列\nlet callbacks = [];\nlet waiting = false;\n\n// flushCallbacks是异步执行的\nfunction flushCallbacks() {\n  let cbs = callbacks.slice(0);\n  waiting = false;\n  callbacks = [];\n  cbs.forEach((cb) => cb());\n}\n\n// nextTick并不是创建异步任务，而是把异步任务维护到了队列中\n// nextTick只会开启一次异步任务\n// nextTick是异步么？既有同步，又有异步；同步就是把异步任务维护到了队列中，异步就是flushCallbacks是异步执行的\n\n// nextTick没有直接使用某一个api,而是做了优雅的降级\n// 内部优先采用promise(ie不兼容)、和promise.then同等的MutationObserver h5的api；可以考虑ie专享的setImmediate；最后才是setTimout定时器\n// 前面的几个api都是微任务，比setTimout执行的时机快，能更快的看到页面刷新完成\n// setTimout要开启一个新的线程，promise.then只是异步执行代码，性能开销要小\n\nlet timerFunc = null;\n\nif (Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks);\n  };\n} else if (MutationObserver) {\n  let observer = new MutationObserver(flushCallbacks);\n  let textNode = document.createTextNode(1);\n  // 观察textNode的文本内容发生变化，变化后就执行回调flushCallbacks\n  observer.observe(textNode, {\n    characterData: true,\n  });\n  timerFunc = () => {\n    textNode.textContent = 2;\n  };\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  timerFunc = () => {\n    setTimeout(flushCallbacks);\n  };\n}\n\nexport function nextTick(cb) {\n  // 把任务维护到队列中不是异步的\n  callbacks.push(cb);\n  if (!waiting) {\n    timerFunc();\n    waiting = true;\n  }\n}\n\n// 要给每个属性加一个dep, 目的就是收集watcher\n// 一个视图(视图就是组件)中有多个属性，（n个属性对应一个视图） n个dep对应一个watcher\n// 一个属性对应多个视图组件 1个dep对应多个watcher\n// dep和watcher是多对多的关系\n\nexport default Watcher;\n\n// 一个组件对应一个watcher；\n// 不同的组件有不同的watcher\n// 一个页面中多个组件，对应多个watcher；某个属性变化了，只会通知依赖了该属性的watcher去更新页面\n\n// 组件化的目的是什么？\n// 可复用、方便维护、局部刷新\n// 一个组件一个watcher, 通过拆分组件来减少刷新的范围，某个属性变化了，只会通知依赖了该属性的watcher也就是组件去更新\n","// 创建元素的虚拟节点\n//  _h() _c()方法\nexport function createElementVNode(vm, tag, data, ...children) {\n  if (data == null) {\n    data = {};\n  }\n  // react是叫props；vue里是data\n  let key = data.key;\n  if (key) {\n    delete data.key;\n  }\n  return vnode(vm, tag, data, key, children);\n}\n\n// 创建文本的虚拟节点\n// _v()\nexport function createTextVNode(vm, text) {\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\n// 虚拟节点vnode\n// key很重要dom diff\nfunction vnode(vm, tag, data, key, children, text) {\n  // vnode上维护了vm属性\n  return {\n    vm,\n    tag,\n    data,\n    key,\n    children,\n    text,\n  };\n}\n\n// AST和VDom一样么?\n// 区别一：描述的范围不一样\n// VDOM和AST很像，但是他描述的信息更多\n// AST可以描述 js css html；描述语言本身 https://astexplorer.net/\n// VDOM只能描述dom\n// 区别二：是否可以增加一些属性\n// AST是语法层面的转化，描述的是语法本身，不可以增加一些属性，原本有什么就转换什么\n// VDom是描述DOM的元素，可以增加一些自定义属性，例如事件、指令、插槽\n","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\";\n\nfunction createElm(vnode) {\n  let { tag, children, key, data, text } = vnode;\n  // 根据标签名tag来创建原生元素\n  // 标签\n  if (typeof tag === \"string\") {\n    // 虚拟节点上挂真实DOM节点\n    // 这里将虚拟DOM节点和真实DOM节点对应起来，后续如果修改属性了，可以找到真实DOM\n    vnode.el = document.createElement(tag);\n    updateProperties(vnode);\n    // 处理儿子\n    children.forEach((child) => {\n      // 儿子需要append到当前的el中\n      return vnode.el.appendChild(createElm(child));\n    });\n  } else {\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\n\nfunction updateProperties(vnode) {\n  let newProps = vnode.data || {}; // 获取当前老节点中的属性\n  let el = vnode.el; // 当前的真实节点\n  for (let key in newProps) {\n    if (key === \"style\") {\n      for (let styleName in newProps.style) {\n        el.style[styleName] = newProps.style[styleName];\n      }\n    } else if (key === \"class\") {\n      el.className = newProps.class;\n    } else {\n      // 给这个元素添加属性 值就是对应的值\n      el.setAttribute(key, newProps[key]);\n    }\n  }\n}\n\nfunction patch(oldVnode, vnode) {\n  // oldVnodes是el，原生DOM就是首次渲染\n  const isRealElement = oldVnode.nodeType;\n  if (isRealElement) {\n    // 首次渲染\n    // 获取真实DOM\n    const oldElm = oldVnode;\n    // 获取真实DOM的父容器\n    const parentElm = oldElm.parentNode;\n\n    let el = createElm(vnode);\n\n    // 先把新的节点插入到老节点的下面\n    parentElm.insertBefore(el, oldElm.nextSibling);\n    // 再删除老节点\n    parentElm.removeChild(oldVnode);\n\n    return el;\n  } else {\n    // DOM DIFF\n  }\n}\n\nexport function initLifeCycle(Vue) {\n  // 把_render函数生成的虚拟DOM，生成真实DOM\n  Vue.prototype._update = function (vnode) {\n    console.log(\"_update\", vnode);\n    const vm = this;\n    const el = vm.$el;\n\n    console.log(\"el\", el);\n\n    // patch既有初始化的功能，又有更新的功能\n    vm.$el = patch(el, vnode);\n  };\n\n  // 生成虚拟DOM\n  Vue.prototype._render = function () {\n    console.log(\"_render\");\n    let vm = this;\n    // 渲染的时候会从实例vm上取值，我们就将属性和视图绑定在了一起\n    // 为什么要call?希望render函数里面的with的this指向vm\n    // 为啥要指向vm?因为vm上有name，有age\n    // console.log(vm.age, vm.name);\n    // let render = `with(this){return ${code}}`;\n    let vnode = vm.$options.render.call(vm); // 通过ast语法转以后生成的render函数\n    return vnode;\n  };\n\n  // 创建文本\n  //  _v(text),\n  Vue.prototype._v = function (text) {\n    return createTextVNode(this, text);\n  };\n\n  // 创建元素\n  // _c('div', {}, ...children)\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments);\n  };\n\n  // 把传入的值val转成字符串\n  Vue.prototype._s = function (val) {\n    return val == null\n      ? \"\"\n      : typeof val === \"object\"\n      ? JSON.stringify(val)\n      : val;\n  };\n}\n\nexport function mountComponent(vm, el) {\n  vm.$el = el;\n  // 1. 调用render方法，生成虚拟DOM\n  // 2. 根据虚拟DOM，生成真实DOM\n\n  // vm._update(vm._render()); // vm.$options.render();\n\n  // 更新根组件\n  const updateComponent = function () {\n    vm._update(vm._render());\n  };\n\n  // 首次渲染的时候会收集依赖\n  // 更新的时候会再次收集\n  let watcher = new Watcher(vm, updateComponent, true); // true标识一个渲染watcher\n  console.log(watcher);\n\n  // 2. 根据虚拟DOM，生成真实DOM\n\n  // 3. 把真实DOM插入到el元素中\n}\n\n// vue的核心：\n// 1）创建响应式数据\n// 2）模板转换成ast语法树\n// 3）将ast语法树转换成render函数, 调用render方法，生成虚拟DOM\n// 4）后续每次数据更新，只需要执行render函数，无需再次执行ast转换的过程\n\n// render函数会产生虚拟DOM(使用响应式数据)\n// 根据虚拟DOM，生成真实DOM\n","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler\";\nimport { initLifeCycle, mountComponent } from \"./lifecycle\";\n\nexport function initMixin(Vue) {\n  // 通过原型prototype给Vue增加init方法\n  Vue.prototype._init = function (options) {\n    // 用于初始化操作\n    // vue vm.$options就是获取用户的配置\n\n    // 我们使用vue的时候，$nextTick, $data, $attr...以$开头的都表示Vue的内置属性\n    const vm = this;\n    vm.$options = options; // 将用户的选项挂载到实例上\n\n    // 初始化状态\n    initState(vm);\n\n    if (options.el) {\n      vm.$mount(options.el); // 实现数据的挂载\n    }\n  };\n\n  // 挂载应用\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n\n    // 整体思想：不一定非得有render函数，没有render函数就用template编译成render函数\n    // 先查找有没有render函数\n    if (!options.render) {\n      // 没有render函数的话，再看下是否写了template，写了template就用写了的template\n      // 没有template采用el外部的html\n      let template = options.template;\n      // 没有写template但是写了el\n      if (!template && el) {\n        // 包括el在内的html就是template\n        template = el.outerHTML;\n      }\n\n      // 将模版template编译成render函数\n      const render = compileToFunctions(template); // render函数就是包含h(xxx)\n      options.render = render;\n    }\n\n    // 最终在这里就可以拿到options.render的函数\n    // runtime和runtimeWithComplier\n    // script引用的vue.global.js这个编译过程是在浏览器中执行的\n    // runtime运行时是不包含模板编译的，整个编译是在打包的过程中通过loader编译.vue文件的；\n    // 用runtime的时候不能使用template\n\n    console.log(\"render\", options.render);\n\n    // 挂载组件\n    mountComponent(vm, el);\n  };\n}\n","import { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\nimport { nextTick } from \"./observe/watcher\";\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) {\n  // options就是用户的选项\n  this._init(options);\n}\n\n// 暂时先这么写，扩展$nextTick方法\nVue.prototype.$nextTick = nextTick;\n\ninitMixin(Vue); // 扩展了_init方法\ninitLifeCycle(Vue); // 扩展了生命周期方法\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","_len","arguments","length","args","_key","result","apply","ob","__ob__","inserted","slice","observeArray","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSubs","watcher","push","notify","update","Observer","defineProperty","enumerable","configurable","isArray","__proto__","walk","data","keys","i","defineReactive","item","observe","dep","get","set","newValue","console","log","concat","_typeof","initState","vm","opts","$options","initData","proxy","call","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","stack","ELEMENT_TYPE","TEXT_TYPE","root","currentParent","createASTElement","tagName","attrs","tag","type","children","parent","start","element","end","pop","chars","text","replace","advance","n","substring","parseStartTag","match","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","gen","node","codegen","test","JSON","stringify","tokens","lastIndex","exec","index","trim","join","getChildren","el","map","c","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","code","compileToFunctions","template","ast","render","renderFn","Function","Watcher","fn","options","renderWatcher","getter","deps","depsId","Set","depId","has","add","queueWatcher","run","queue","pending","flushSchedulerQueue","flushQueue","q","setTimeout","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","nextTick","createElementVNode","vnode","createTextVNode","undefined","createElm","createElement","updateProperties","child","appendChild","newProps","styleName","style","className","setAttribute","patch","oldVnode","isRealElement","nodeType","oldElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_render","_v","_c","_s","val","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","outerHTML","$nextTick"],"mappings":"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"}